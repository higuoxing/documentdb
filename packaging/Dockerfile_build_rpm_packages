ARG BASE_IMAGE=rockylinux:8
FROM ${BASE_IMAGE}

ARG POSTGRES_VERSION=16
ARG DOCUMENTDB_VERSION

RUN test -n "$DOCUMENTDB_VERSION" || (echo "DOCUMENTDB_VERSION not set" && false)

# Install EPEL and PostgreSQL repository
RUN yum install -y epel-release || (echo "Failed to install EPEL. Check network connectivity and firewall settings." && exit 1)
RUN yum install -y https://download.postgresql.org/pub/repos/yum/common/redhat/rhel-8-x86_64/pgdg-redhat-repo-42.0-52PGDG.noarch.rpm || (echo "Failed to install PostgreSQL repository. Check network connectivity." && exit 1)

# Update package manager and disable conflicting PostgreSQL module
RUN yum update -y
RUN yum module disable postgresql -y

# Install build dependencies and PostgreSQL
RUN yum install -y \
    wget \
    ca-certificates \
    python3 \
    curl \
    gcc \
    gcc-c++ \
    make \
    cmake \
    git \
    pkg-config \
    libicu-devel \
    krb5-devel \
    postgresql${POSTGRES_VERSION} \
    postgresql${POSTGRES_VERSION}-server \
    postgresql${POSTGRES_VERSION}-contrib \
    rpm-build \
    rpmlint \
    rpmdevtools \
    && yum clean all

# Install PostgreSQL development packages separately with dependency resolution
RUN yum install -y postgresql${POSTGRES_VERSION}-devel postgresql${POSTGRES_VERSION}-plpython3 --skip-broken || \
    echo "Warning: Some PostgreSQL development packages could not be installed due to missing dependencies"

# Set up locale
RUN yum install -y glibc-locale-source glibc-langpack-en
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

COPY scripts /tmp/install_setup

# Note: Skipping external dependencies due to network restrictions
# The following dependencies would normally be installed:
# - libbson, PCRE2, Intel Decimal Math Library, Citus indent
# For production use, ensure network access is available for dependency installation

# Set the working directory inside the container
WORKDIR /build

# Copy the source code into the container
COPY . /build

# Setup the RPM packaging
COPY packaging/rpm_files /build/rpm_files
RUN sed -i "s/POSTGRES_VERSION/${POSTGRES_VERSION}/g" /build/rpm_files/documentdb.spec
RUN sed -i "s/DOCUMENTDB_VERSION/${DOCUMENTDB_VERSION}/g" /build/rpm_files/documentdb.spec

COPY packaging/packaging-entrypoint-rpm.sh /usr/local/bin/packaging-entrypoint-rpm.sh
RUN chmod +x /usr/local/bin/packaging-entrypoint-rpm.sh

# Set the entrypoint
ENTRYPOINT ["packaging-entrypoint-rpm.sh"]